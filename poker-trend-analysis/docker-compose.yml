version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: poker-trend-postgres
    environment:
      POSTGRES_DB: poker_trend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - poker-network

  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: poker-trend-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: poker_trend
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - poker-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: poker-trend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - poker-network

  # API Server (Node.js/Express)
  api-server:
    build:
      context: ./backend/api-server
      dockerfile: Dockerfile
    container_name: poker-trend-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/poker_trend
      MONGODB_URL: mongodb://admin:password@mongodb:27017/poker_trend?authSource=admin
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend/api-server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - poker-network
    command: npm run dev

  # Data Collector (Python)
  data-collector:
    build:
      context: ./backend/data-collector
      dockerfile: Dockerfile
    container_name: poker-trend-collector
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/poker_trend
      MONGODB_URL: mongodb://admin:password@mongodb:27017/poker_trend?authSource=admin
      REDIS_URL: redis://redis:6379
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      TWITTER_BEARER_TOKEN: ${TWITTER_BEARER_TOKEN}
      REDDIT_CLIENT_ID: ${REDDIT_CLIENT_ID}
      REDDIT_CLIENT_SECRET: ${REDDIT_CLIENT_SECRET}
    volumes:
      - ./backend/data-collector:/app
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - poker-network
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8001 --reload

  # Content Generator (Python)
  content-generator:
    build:
      context: ./backend/content-generator
      dockerfile: Dockerfile
    container_name: poker-trend-generator
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/poker_trend
      MONGODB_URL: mongodb://admin:password@mongodb:27017/poker_trend?authSource=admin
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      FFMPEG_PATH: /usr/bin/ffmpeg
    volumes:
      - ./backend/content-generator:/app
      - ./assets:/app/assets
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - poker-network
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8002 --reload

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: poker-trend-frontend
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api-server
    networks:
      - poker-network
    command: npm start

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: poker-trend-nginx
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-server
      - frontend
    networks:
      - poker-network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  poker-network:
    driver: bridge