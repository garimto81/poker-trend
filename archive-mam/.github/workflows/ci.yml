name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libopencv-dev python3-opencv
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run system check
      run: |
        python run_poker_app.py check
    
    - name: Run tests
      run: |
        pytest test/ -v --cov=src/ --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt

  docker:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t poker-mam:test .
    
    - name: Test Docker container
      run: |
        docker run -d --name test-container -p 5000:5000 poker-mam:test
        sleep 45  # Wait for container to start
        
        # Test health endpoint
        curl -f http://localhost:5000/ || exit 1
        
        # Test API endpoints
        curl -f http://localhost:5000/api/file-browser/drives || echo "Warning: API test failed"
        
        docker stop test-container
        docker rm test-container
    
    - name: Login to Docker Hub
      if: success() && github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      if: success() && github.event_name == 'push'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/poker-mam:latest
          ${{ secrets.DOCKER_USERNAME }}/poker-mam:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max