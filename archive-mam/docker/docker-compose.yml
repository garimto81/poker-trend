version: '3.8'

services:
  # 메인 Poker MAM Flask 애플리케이션
  poker-mam:
    build: .
    container_name: poker-mam-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./temp_videos:/app/temp_videos
      - ./analysis_results:/app/analysis_results
      - ./static/results:/app/static/results
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - MAX_FILE_SIZE=10737418240
      - TEMP_VIDEO_DIR=temp_videos
      - RESULTS_DIR=analysis_results
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 기존 백엔드 (FastAPI) - Phase 1-3 시스템
  legacy-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: poker-mam-legacy-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./sql_app.db
    volumes:
      - ./uploads:/app/uploads
      - ./clips:/app/clips
      - ./videos:/app/videos
      - ./analysis_results:/app/analysis_results
      - backend_data:/app/data
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - legacy

  # Redis 서비스 (기존 시스템용)
  redis:
    image: redis:7-alpine
    container_name: poker-mam-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    profiles:
      - legacy

  # Celery Worker 서비스 (기존 시스템용)
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: poker-mam-celery
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./sql_app.db
    volumes:
      - ./uploads:/app/uploads
      - ./clips:/app/clips
      - ./videos:/app/videos
      - ./analysis_results:/app/analysis_results
      - backend_data:/app/data
    depends_on:
      - redis
      - legacy-backend
    command: python run_celery.py
    profiles:
      - legacy

  # 기존 프론트엔드 (React)
  legacy-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: poker-mam-legacy-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - legacy-backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    profiles:
      - legacy

  # 개발용 프론트엔드 (선택사항)
  frontend-dev:
    image: node:18-alpine
    container_name: poker-mam-frontend-dev
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm start"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    profiles:
      - dev

volumes:
  redis_data:
  backend_data:

networks:
  default:
    name: poker-mam-network